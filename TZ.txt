##########
# readme #
##########

Основное предназначение: написать программу со свойствами сильного искусственного интелекта.

Неполный список желаемых и важных свойств.
- воспринимать любую предметную область
- разбираться в системе любой сложности 
- вывод новых знаний и закономерностей
- ...

###############
# Уже сделано #
###############

1. Структура файлов
    Есть файлы с логикой .py и файлы с данными .dot.
    Файлы с данными хранят графы, где узлы это понятия (слова), а ребра связи между ними.
    Открываются программой xdot.
    Основной файл программы main.py.
    При запуске, можно вводить текст в консоль.
    Запись слов через пробел, приведет к записи их в граф с учетом связей между словами, детектируемых по пробелам.
    Уже введенные слова и связи повторно не добавляются.
    Есть парсинг знака вопроса в конце ввденного слова.
    Выведет связи этого узла с другими узлами с глубиной рекурсии 5.
    Будет переделываться.

2. Написан класс узла (вершины)
    Сделан метод для отображения в графе массива объектов узлов.
    Класса для связи не будет. От узла к узлу передается только факт связи.
    Весь контроль ошибок и отображения графа на стороне программки graphviz.
    Сначала только связи названные пользователем в повествовании.
    Возможные новые связи - дальнейший функционал после добавления вопросов.

2. Операции над вершинами и связями.
    Cоздание, удаление, чтение.

###############################################
# Краткосрочная перспектива (день разработки) #
###############################################

1. Переписать узел (вершину) на класс, а не только строка в графе.
    Нужно для хранения и исполнения кода внутри узла. Позже будет меньше кода в каждом узле, больше узлов.
    Написать функцию + руками для одного из объектов.

2. Операции над вершинами и связями.
    Изменение.
    Без деления на вопросы и ответы.
    Все в режиме впитывания в себя.

3. Добавить создание определения и названия знака из других знаков.
    Опускаемся до физических характеристик. (пространство, время, масса)
    Даем определение топу частотных слов.
    Гуппы частотных слов по популярности: предлоги, местоимения, существительные, прилагательные, глагол.
    Работаем в двух режимах:
    Утверждение - создаем узлы.
    Вопрос - выполняем программы в них.
    Пока не добавляем БД, все храним в языке graphviz.
    Переписать функцию создания узлов.
    Когда используется символ тире, создается субграф и туда записывается все, что после тре.
    Когда пишется слово и знак вопроса - исполнение программы в слове.    
    
    Определение знака в виде текста. Для начала в виде списка знаков.
    Отказываемся от ассоциаций с графикой пока.
    Взять толковый словарь для детей. 
    В толковом словаре много старых слов, их нужно фильтровать.
    Пока отложу толквый словарь.
    Словосочетания.
    Лингвисты подсчитали, чтобы понимать текст из одного миллиона слов на 90%, достаточно знать 15063 слова.

    Альтернативный подход вывода определений - выделение закономерностей.
    (Противоположность органов чувств, датчиков)

    Если есть повторяющаяся ситуация, ее можно пометить занком. Закон повторения занести в программу.
    Попробовать записать закон повторения не на питоне, а на знаках.

    https://ru.wikipedia.org/wiki/Определение_(логика)
    https://dic.academic.ru/dic.nsf/enc3p/220910

4. Синонимы.


5. Зпись историй.
    Как будет храниться последовательность событий во времени.
    Если делать постоянную ссылку на понятие "дальше", будет кашка.
    Нужна структура данных (список).

6. Истинность и ложность высказываний, закономерностей, гипотиз.
    Пишется, после реализации датчиков.
    Закономерности и гипотезы будут добавлены существенно ниже (позже).
    Истинными помечаются узлы, если они сраваясь с другими участками графа совпадают.
    Желательно делать несколько сравнений, если есть записи в истории о прецендентах.
    Сравнили с определением в теории, сравнили с применениями, описаниями на практике.

7. Выделение локальной и глобальной памяти.
    Высказывания попадают в глобальную память, когда меняется контекст или они считаются истиными.
    Куски графа из глобальной памяти могут применятся к разным контекстам в локальной.
    Флаг истинности или ложности оставить как в глобальной памяти, так в локальной.
    Пока идет считывание одной порции информации (одного предложения), все помещается в локальную память. Добавляются новые связи и элементы.
    Добавление временной метки к элементам и связям в любой памяти. Неужели из за этого придется класс для связи делать?
    Ссылка на программу которя порадила элемент, в котором эта ссылка находится. 
    Как могут выглядеть разные виды контекста (удаленность от текущей временной ветки) - отдельная задача.
    Делим ли мы стрелки на типы? Пока не делим, т к нет необходимости.
    Хранение истории в глобальной памяти. Привязка событий ко времени. Как по контексту, так и методанные. Хранить источник данных (из знака или внешней среды). Способ вывода из старых знаний. Время придется хранить как в опретивке, так и в глобале.

8. Код для вопросов и ответов.
    Повествование - только операция чтения над памятью.
    Ответ на вопрос может быть повествованием, соответсвенно это тоже чтение памяти.
    Когда не ответа на вопрос в памяти, может включаться генерация новых знаний, но это отдельная задача.
    В током случае должно говоритья, что нет ответа.
    Составление полного списка всех возможных слов, обозначающих форму вопроса и ответа. (Кто, что, где, почему и т д.) Найти список у учебнике русского и других языков.
    Как выглядит связь с вопросом в предложении?
    После детектирования вопроса, должна быь операция чтения.
    Отличеие вопроса от невопроса - знак вопроса в конце (в начале). Позж распознавание по вопросным словам. Риторические вопросы. Понимание желение собеседника. Эмулирование его в памяти.
    Вопрос системы - желание пополнить граф (отсутствие информации в графе на заданные впросы человеком).

9. Выделение закономерностей
    Выделение закономерностей это операция над несколькими узлами.
    Сам код выделения закономерности тоже храниться в одном из узлов.
    Узлы из которых выделяют закономерности получены не важно как от органов восприятия.
    Эти же узлы могут быть как сигналами в сыром виде, так и словами (другими абстракциями).
    Оригинал: https://www.youtube.com/watch?v=ZtPNSuWwsnA канал GS RUS

10. Генерация новых знаний.
    Должна включаться каждый раз, когда нет ответа в памяти. По сути мы ее ограничиваем в выводе.
    Отработать на задаче непосредственного менеджера. Пример с генерацией новых знаний. Напрямую связи между элементами не определены, но можно спросить систему через элемент.
    Один из вариантов, что знания заключаются в новых связях. Так же можно выделить новые знания в новых элементах. Например выполнилась мини программа внутри одного узла, и т к ответ представляет из себя ни разу не использованное слово, то сделать под него новый узел и выдать его за ответ. С цифрами сложнее. Под каждую новую цифру нет необходимости создавать новый узел. Все они попадают под определение цифры. Можно создать локальный узел, для ответа, т к в оперативке он новый. Потом забыть или запонмить факт возможного решения.
    Проверить генерацию новых знаний на сказке о колобке. От кого еще может уйти колобок, помимо перечисленных вариантов. (ответ от кого угодно). А если в рот попросят прыгуть? (ответ - ни от кого не уйдет, кроме того, кто попросил в рот прыгнуть).
    Можно воспринять как факты, для выработки знаний. (колобок от бабушки ушел,     колобок от дедушки ушел, колобо от зайца ушел, колобок от лисы не ушел). Если выделяестся закономерность (колобок от всех уходит), то она должна как-то записываться (в виде правила)?
    Так же еще есть язык даталог. Есть ли необходимость заключения его внутри узла? Пока не вижу. Он хороший пример ограничеий (правил), которым нужно соответсвовать, чтоб сделать вывод, дать ответ. Правила могут быть записаны на графе или в вершинах?
    Отдельная задача, но в данной группе - выделение правила из закономерности и запись на графе. Можно сначала без графа. Умение обобщать. Дедукция и индукция. + еще несколько по методичке викентьевой. Почитать статью на википедии о наукометрии.
    Фишка знаний в том, чтобы генерировать новые знания по имеющимся правилам.
    Бесполезно переписывать все возможные комбинации входов и выходов.
    Колобок ушел от бабушки? Колобок - сущность, вершина. Бабушка - сщность вершина. Ушел - оператор? можем ли мы ноые занияния сгенерировать? Или это только повествование. Пересказ это оператор? (нет. Новых заний нет, если новые зания есть, это уже не пересказ). Если появляются новая информация - значит оператор. Если не появляется - пересказ, повествование. Занния можно генерировать не только на цифрах, но и судить от кого еще уйдет колобок.

11. Режим копирования с обратной связью

###################################
# предметные области для парсинга #
###################################

1. Для парсинга больших текстов сырой версией программы можно ввести фильтр нормальной формы слова.
    https://ru.stackoverflow.com/questions/781115/Как-получить-нормальную-форму-слова-в-файле

1. Пространство - время
    Начинать хранение информации с помощью простых понятий, например что где находится (транспорт, геометрия, пространство, расстояние как ресурс). Теория игр кстати вспоминается. Мироощущение у ребенка.

1. Сказка про колобка
    Поискать сказки для детей 3 лет (для самых маленьких).

2. Арифметика

3. Задача сколько яблок
    Во первых, уровни вложенности. Маша и Катя находятся в комнате. И у них есть яблоки. Сколько всего у них яблок вмсте.
    Сложение. У кати 3, у маши 2. Сколько всего. Дублируется с задачей по программированию.
    решение логических задач
4. Задача непосредственного менеджера

5. Учебник по программированию
   Обучение программированию, как предметной области.
   Перевод задач по программированию с ЕЯ на ЯП.
   Выделение тех структур данных, которые не только в программировании. Схематичный рисунок.
6. Учебник по русскому языку

8. Придумать свою историю.
    Заставить генерировать историю. Фантазия? Планирование? Целеполагание? Какие 4 графа у МФТИ? (событие, роль - это типы знаков)

####################################################
# Недельная перспектива (доделать в следующий раз) #
####################################################

добавить к знакам операции логики и или не

Отработать сценарий нового понятия

Вывод определения из простых слов

Во время подгрузки в оперативку, подгружаются ассоциации, но не все. Для возможного использования. В зависимости от глубины. Контекст между предложений

Юмор - резкие связи с контекстом. Попробовать написать программку, которая преследует цель, оперируя понятиями (желание пошутить)

Слова обозначающие движение, слова обозначающие препятствия. Словестное описание по виртуальной карте со своими законами.

Методы отображения и хранения в бд для класса.

конвертация сказки про колобка в граф

попытаться дать определение через уже имеющиеся слова

парсинг вхожной строки с помощью библиотек. Готовнось обойтись без библиотек. Похожие буквы, опечатки, учет информации из ненормальной формы слова.

Когда-то хотел начать с цифр и операциях над ними (это в отншении типа связи и кода , хранящегося в узле) (в то же время, код оперций должен быить не в узле, а на языковом уровне) (оператор + должен быть отдельным узлом)

Все таки попробовать позже парсинг колобка

синонимы. Это просто ссылка или отельное понятие, и у ссылки есть степень выраженности. Может быть только чать понятия синонимична. В током случае нужна операция сравнивания всего со всем.

#####################################################################################
# Долгосрочная перспектива (тезисы, которые надо реализовать, но не понятно еще     #
# как и когда)                                                                      #
#####################################################################################

абстрагирование - отражает в себе неполноу возможности восприятия от датчиков

Создание языка

Перевод с языка на язык

Создание нескольких агентов. Экспремент с изменением кода на другом агенте (жизнеспособность).

Функция и свойство.

Научить учиться

Юмор - резкие связи с контекстом

Слова обозначающие движение, слова обозначающие препятствия.

1 2 3 слово (цифры). Даём определение 3 за счёт 2. Продумать добавление 1 и связь с 2. Или перестройка определения.

причина-следствие

Начало учебника по программированию. Как текст для парсинга.

Что будет, если все будет связано со всем - все нормально в голове связано все что нужно и не умираем. С математической точи зрения все со всем и не будет связвано.

Риторические вопросы

7. Перерограммирование себя.

8. Знак и символ, сигнал и шум.
    Когда известно, что ищем, то сравниваем входную информацию с одним шаблоном.
    Если совпадение удачное, то это из категории шум переходит в сигнал, или знак.
    Сигналы усиливаются, шумы фильтруются.
    Тест. В локальную картину добавляется новая информация порциями. Сигнал и шум могут меняться местами.
    Знаком может быть жест, действие. У знака конкретный смысл, у символа не до конца определенный. 
    Знаки и/или символы могут быить связаны.
    Знак, сигнал, символ - это абстракции. Абстракция - мера нашей возможности воспринять. Знания выделюятся из сигнала путем абстрагирования.
    Ребенок сначала работает в режиме копирования с обратной связью.

9. Части речи
    Можно поле в классе завести. Код внутренней программы может отличаться у разных частей речи.

10. Конфабуляция
    Определение из вики - ложные воспоминания, в которых факты, бывшие в действительности либо видоизменённые, переносятся в иное (часто в ближайшее) время и могут сочетаться с абсолютно вымышленными событиями.

11.  Степень выраженности
    Нашел на картинке в группе общая семнтика.
    Ни о чем не получится узнать все.
    Никакие две вещи не одинаковы.
    Вещи сущестуют в сетпенях.
    Все меняется.
    С изменением среды может измениться и поведение.
    Разные люди оценивают по разному.

12. Определение знака по обстановке, в которой он используется.
    Упражнение - придумать новый знак с новой программой
    Изменение смысла знака, при том что раньше другой смысл был
    (Плавная граница слова недвижимость)
    едениц измерения нет, но что то считается недвижимосью, что-то нет
    еще пример, слово нарцысизм, у него есть тоже степень сравнения

Создание новых не известных образов из известных графических . Фантазия

перейти на графовую БД
    найти алгоритмы поиска узлов в графе

узел определения определнения


################################
# Советы по организации мыслей #
################################

1. Оперировать понятиями, а не словами.

2.  Объяснение почему есть код в узле, хотя мы заявляем что должны обойтись без кода.
    
    2.1 Уже есть досаточно большой объем кода написанный людьми. Было бы глупо его не использовать.
        
        Вспомним арифметику. Знания о том как складывать числа уже имеются и зашиты в операторе плюс. Мы используем времмно это готовое решение на ЯП. Есть куча других языков, например грфический или нейросетевой, которые могут предоставить альтернативное решение для знака. В начале мы еще не знаем альтернативных методов и все они тоже должны будут быть записаны словесно.

        Даже если мы используем ЯП в определении. То выход этой минимпрограммы должен максимально использоваться в языковом уровне. То есть, связи до узлов, новые узлы.
    
    2.2 Понятие может быть программой. Можно ли избавиться от программ в понятиях? Как программы представлены в голове - нейронами. Один нейрон - не одно понятие. Даже сами понятия это небольшие сетки. Поэтому в каждом понятии в перспективе будет программа внутри или сетка. Важное отличие от всего, что хранится внутри - наличие названия (заголовка), как все это представлно в языке.
    
    2.3 Как должен выглядеть процесс написания программ внутри узлов. На ЯП, тут все понятно. На понятиях, должно использоваться минимальное количество кода. Понятие выглядит как последовательность узлов и связей между узлами, все это сохранено под одним адресом (заголовком). Да, в каждом узле может быть код. Но интерес в том, что при оперировании понятиями, чье определение состоит из других понятий - кода нет. Назовем оперироваие понятиями, в которых уже нет кода - верним уровнем или языковым. Да, программа определения знака это подграф в графе.

    Программа может писаться как на языковом уровне так и на языке программирования
    К написанию на чистом языке мы сейчас не готовы. На верхнем уровне вообще не будет ЯП.

3. Можно свести все к if-else.
    Соглашусь. Думаю все это сводится к коннекционизму. Можно вспомнить язык даталог, на котором храняться ограничения и делаются логические выводы. Там все к ифам сводится. У нас есть ифы, которые администрируют граф. От данного подхода, откажемся, когда перейдем к верхнему уровню.

#####################################
# Возможно используемые библиотетки #
#####################################

pymorphy2 - привод слова к нормальной форме
nltk - разбиение на предложения и слова (токенизация), удаление лишних слов, нормальная форма
rutermextract - выделение ключевых слов
PyMystem3 - еще привод к нормальной форме (лематизация), но надо по несколько предложений, чтоб быстро
