    Мысли в слух, потом подудаляю или распихаю по разделам
    Опять я программирую слово "=" на питоне. Запись производится в файл.
    Я искал универсальное хранилще для знака и понтяия и решил, что это будет файл.
    В файл можно записать любые аспекты.
    Идеальная ситуация, когда выделяются новые понятия.
    Эта ситуация возможна тогда, когда идет текст. Формируется граф.
    Появляются новые слова, они добавляются в граф. Дальше необходимо понять
    закономерность, какую они обозначают. Генерируется набор функций из известных
    элементов и выбирается наилучшая гипотеза.
    Еще вариант создания нового понятия - обозначение повторяющиеся последовательности слов
    от предложения к предложению.

    Каждый раз когда мы добавляем глагол - у него пишется алгоритм.
    А когда добавляем существительное - разве нет?
    Слово может все что угодно содержать, есть понятия, которые сложные вещи
    описывают и поэтому отсутсвие алгоритма не обязательное свойство существительного.

    Ничего страшного нет, что ты пишешь питоновский код в слово "=". Когда будешь
    решать задачки по программированию по сложнее, там будут определения второго рода.

    Еще примеры
    поиск макисмума сначала из 3 чисел
    потом из 5 (уже сортировка массива будет, потом выдача первого)
    потом максимальное четное (сначала сортировка, потом четное)

    Работа с бесконечностями
    точка закрашенная область, меньше которой закрасить нельзя
    подводка к определению бесконесно малый и бесконечно большой
    (точка и отрезок)

    Продолжаю рассуждать про переменные.
    Один из вариантов - перейти сразу к объяснению одномерного пространства.
    Подразумевалось, что ЯП будет объяснен на ЕЯ.
    Если объяснять сохранение многих значений во многих переменных, то все они будут
    иметь связи со словом "хранит".

    Если рассматривать перезапись одной и той же переменной (a = 1 a = 2 a = 3), то на текущий момент
    в графе показывается, a имеет связь со всеми тремя значениями и не отображает последнее хранящееся значение.
    Это из-за того, что не учитывается порядок ввода. Придется для каждого узла метку времени ыыодить.
    Не используемые значения выкидывать. В результате я играю в компилятор.

    Если использовать уже существующий шаблон, то нужно чтоб слово "=" протягивало связь от переменной к значению.

    В таком случае нужно перед каждой строкой говорить, что это переменная и в нее идет запись значения.
    Или еще лучше, что сейчас мы будм программировать.

    Получается из за контекста используются другие значения.

    Получается это вникание в синтаксис ЯП, а не алгоритмы.
    Чтобы объяснять алгоритмы на ЕЯ, нужны местоимения, лица и обозначение объектов над которыми
    можно производить операции.

    Резюмируем
    Для ЯП нужен контекст.
    А алгоритмы попробуем реализовать на словах, а не на операторах питона.

    Может Маша и яблоки?

    маша хранит одно яблоко
    даша хранит два яблоко
    сколько яблоко всего

    Вообще не очевидно что такое "один", "два", "всего".

    Может симулятор подключить и объекты расставлять.
    Маша один кубик, Даше еще один.
    Яблоки шарики. Можно про воксели вспомнить и про классификацию.
    Слово "всего" подсчет количества объектов одинакового класса?

    Что если самому попробовать составить граф определений топа 10 популярных слов

    Есть определения, которые отталкиваются от физических величин.
    Есть математические и философские определения. Можно сказать, что информационные.
    Математические наверняка когда-то были связаны с физическими и образовались из них.
    Если я хочу объяснить слово "четыре", значит мне придется в реальности показывать
    разные четверки объектв и говорить, что их что-то объединяет. А именно - количественность.
    Числа - отражения количественности величин.
    Переменные - псевданимы и обозначения величин. Присвоение имени.
    Так же есть классы и экземпляры.
    Экземпляры отличаются друг от друга только назвнием.
    Например - "яблоко" и "другое яблоко"
    Числа это тоже классы.
    У числа 4 могут быть экземпляры. 4 обозначющее яблоки и 4 обозначающее людей.
    4 обозначающий абстрактный шаблон.

    Получается к понятиям нужно добавить экземплярность.
    На все ли понятия накладывается экзмплярность или есть исключения.

    Работа с симулятором.

    Понятие кодируемое буквами это не только возможный питоновский код, но еще и 
    список объектов, веселей в симуляторе.

    Как эе быть с переменными?
    Сначала модель цифр сделать из реальности.
    ЯП по сути это калька с реальности для применения определенных подсчетов.
    Операторы - упращенная версия реальных действий , только с определенными свойствами.

    Может попробовать дать определение каким-нибудь глаголам.

    Резюме
    1) определение глаголов
    2) топ 10 граф
    3) рассужденния об экземплярности каждого понятия (например слово "год")
    4) введение определения одномерного пространства
    5) поиск симулятора

    Определение глагола.
    Например передвигаться - изменять свою координату.
    Это шаблон, который можно сравнить с уже совершенным или планируемым действием.
    (локальным графом). и сказать похож или не очень.

    Контексты и фантазии можно представить как записи локального графа в глобальный
    с пометкой когда он был сделан и при каких обстоятельствах.

    Практически любые определения упираются в подсчет объектов.
    Которые, я хотел бы объяснять в симуляторе.
    Допустим симулятор у меня уже есть. Как бы я это объяснял?

    Рисуем иллюстрацию

    1100100001000101

    сколько единиц?

    есть определение слова единица и это шаблон.
    Чтобы понять вопрос, должно быть жестко закадировано понятие шаблона.

    Зачем обязательно в грфику уходить, представляя одномерный массив 1100100001000101
    или многомерный в симуляторе.

    я так же могу в строку через пробел записать 1 1 0 0 1 0 0 0 0 1 0 0 0 1 0 1
    и спросить сколько единиц?

    Люди в отличие от животных научились мыслить абстрактно, а не только принимать показания с датчиков

    строка - это сырые показания.

    абстрация - это использование одних признаков и неиспользование дргугих.

    В ЯП происходит операция сложения в ячейку памяти и сравнение с шаблоном.

    Для любых других цифр - 2, 3, 4 и т д будут дургие шаблоны.
    Если бы я запустил эту строку на текущей реализации программы, то получил бы граф из двух элементов.
    То есть время создания узла в локальном графе - обязательный компонент.
    Может тогда и тип ввода изменить по словам.
    Предложения это тоже абстракии. Первоочередное - это одиночные знаки.

    Если человеку сказать эту же последовательность, он среди всего многообразия вываленных на него признаков
    подчеркнет именно количественность. Не важно считает он это на слух или пишет на бумаге.

    Свойство за которым я гоняюсь - это генерация шаблонов и их использование в любом типе сигнала.

    На каком языке будет записываться этот шаблон?
    Должен ли он использовать те же кирпичики из которых состоит сам сигнал с датчика.
    В живых орггнизмах язык вернего уровня тоже работает поверх ассемблера на генах.
    Нейросети подбирают функцию любой сложности к сигналу.
    Твой подход чем-то отличается от всех дргих попыток постройки интеллектуальных агентов?
    Все началось с отражения связи между словами в тексте.

    возьмем последовательность

    110001100011000 и т д

    Рассмотрим окно []
    запихаем сначала 1 символ из последовательности, пробежимся окном по последовательности
    вычислим ошибку
    потом двумя [11]
    потом тремя [110]
    [1100]
    до [11000]
    Если увеличить окно, то или ошибка перестанет расти
    или период повторения будет уменьшаться

    как подбирать сложные зависимости, когда следующий элемент вычисляется на основ епредыдущего

    нам ведь не надо предсказывать, хотя выделение шаблона, это по сути предсказания

    Тебе нужно было всего-то отпределение цифры на языке твоей проги.

    по сути даже на этой беспорядочной последвательнсти можно выделить шаблоны

    1 - 1
    11 -2
    111 -3
    и т д

    у знака есть id 
    знак задается через положительно подкрепление
    подкрепление, значт есть целевой критерий
    У живых оргнаизмо целевой критерий покормить или похвалить
    может цифры через покормить создавались

    создать симулятор с бегущей строкой, посмотреть как он выработает шаблоны цифр
    может от цифр будет недалеко и до букв и слов

    -----------------

    составил скриптик по поиску шаблона в строке
    цифра три - три единицы подряд
    усложним определение цифры три
    это элмемнт и элемент и элемент
    все элементы равны
    в определении йифры не должна участвовать сама цифра
    нужна какая-то оперативная память, где будут собираться шаблоны
    нужно воспроизвести генерацию шаблона

    в принципе есть надежда, на использование существующего софта
    только вместо единиц и нулей слова с обязатеьными метками времени.
    Метку времени походу придется сделать в файле описания слова, наряду
    с полями имя, определения, питоновский файл.

    1) рандомная генерация строки длинной 1000 скажем
    2) интерисуемся пока шаблонами только из единиц, хотя други тоже возможны
    но мне пока не нужны
    3) берем шаблон "1" и бежим по строке собирая индексы
    4) увеличиваем длинну шаблона на еще +1, повторяем вывод
    чисто теоретически мы найдем все вхождения
    можно даже переписать строку заменив найденные шаблоны на арабские цифры.

    меня смущает, что в написанном коде будут знаки +
    когд, который пишется, это симуляция высокоуровневой деятельности
    если бы было на мозгу человека, то он бы в оперативное поле или фантазию
    помещал два фрагмента и искал сходство

    Ребенок без труда замечает, что два каких-то предмета могут быть одинаковыми

    Потом он может зметить что удобно помечать определенное количество знаком
    и обмениваться инфой с собеседником

    можно ли это все провернуть без единой системы вознаграждения?

    Зачем нужно выделять вообще эти шаблоны
    чтобы планировать, коротко объяснять (хешировать, кодировать)

    Допустим у нас есть робот
    У него есть несколько каналов данных
    пространственная сцена, только перед камерой
    звук, пока без направления
    осязание (оказание сопротивления при движении)

    Робот помещается в сцену
    При повторяющихся дейсвтях в пределах фильтра сохраняет шаблон со всех трех типов датчиков

    В нейросетях похоже работает - свертки это шаблоны
    только они детализированы и не образуют высокоуровневого языка
    + проблемы с производительностью

    уход в высокоуровневость языка решает обе эти проблемы

    идея аналогичная софту со словами (то что до этого делал)
    предметная область морзянка
    сначала фильтра на длинный - короткий сигнал из единичек или на арабских цифры
    потом на их основании боллее высокоуровневая логика

    то что обозначено цирами)
    по пунктам выше, это я пытаюсь создать поиск шаблонов
    но при этом сам поиск жетско закодирован со своими зонами внимнаия


    будем искать шаблоны не больше динной пять
    пусть это будет железным ограничением

    если вспоминать про камеру,
    то там моделирование среды придется писать в размытом виде
    есть воксели, меши, точки, 
    мне нужны вероятности
    или нечеткое положение
    положения друг о друге хранятся в иерархии
    иногда составляемые нтревиальным образом

    например не стол в комнате, на столе монитор
    а в комнате монтор, он на столе

    Все эти игры с воссозданием картинки в симуляторе сначала проделать бы

    Ну вывиду я все эти индексы шаблонов в 1000 строке
    Как будут добавляться новые шаблоны?
    Нужно сразу думать о генераторе шаблонов

    Получается, я делаю подбор сверток
    отличие от сетей в том, что я руками просматриваю все свертки и 
    к имеющимся сврткам буду прибавлять еще
    из имен маленьких сверток образуются болшие более абстрактные
    абстрактные свертки из разных источников должны работать в едином пространстве имен
    
    попробовать получить наблоны на ноликах и еденичках
    потом попробовать заменить id на слово "один" " два" "три"
    оперируя словами симулировать похожие поледовательности
    или посупаемые на вход последовательности обозначать словами

    вроде возможно потом перейти на 2д и 3д

    как будет себя на длинной последовательности 111111111
    если известен шаблон только 111 (три)
    будут перекрестия
    нужно помечать подходящие последовательности
    у каждой цифры есть свой индекс, как с понтяием и временем в предыдущем софте

    такая иллюстрация придумалась
    можно через тк интер

    одна бегущая строка
    есть кнопки со вставками групп едениниц (двойки, тройки)
    при нажатии на кнопку в строку встраивается шаблон
    программа ловит данную строку, генерирует свертки
    осуществляет подмену в своей бегущей строке

    можно не бегущие строки а просто статичные строки с шаблонами где-то посередине

    не корректно это называть сверткой, т к свертка выкидывет чать информации

    00010000100000100000100010

    0110001100010001100001000110

    001110011000100111010101110

    пытаться найти наболее длинные шаблоны и выкидывать полностью нулевые

Каждый шаблон кодируется знаком
в результате вся страка пишется новыми знаками
приоритет оттдается самым длинным знакам

На основании какого критерия агенту захочется использовать знаки
На основании свойства языка - желать мнимизировать длинну слов для общения

Сразу в одно из самых сложных
Облако точек с подвижными объектами классифицируется знаком подвижный
Можно с очень низким разрешением

Позже перейдем от одномерной строки к 3хмерной.

Строку можно сделать бегущей равной максимальной длинне окна для знака
Первая строка в 1000 символов - это предобучение популярным шаблонам.
Бегущаяя - обчение на ходу.
Добавляютмся новые шаблоны к уже существующим.

Цифры можно заменить на буквы.
Тогда шаблон уже не в повторении одинаковых символов заключается, а скорее в их наличии.
Подключаем ранее примененные тезисы, что знак активирует программы.
Получается то, чем я сейчас занимаюсь на строке - это скорей детекция знаков.

Началось все с того, что я попытался выделить определение цифр.
Исходя из последних соображений, определение цифры четыре - это один, один, один, один.
Если я на прошлом разработанном шаблоне попытаюь написать четыре, то получу одну стрелку к слову один.
Мне нужно как минимум четыре стрелки и едеицы должны представлять из себя разные экземпляры.
Я же уже хотел вводить метку времени каждому слову.
Хотел ввод кажого слова сделать, а не предложения целиком.
Можно время присваивать предложени. а дробную часть записанной секунды делить на количество слов.
В таком случае за интерфейс не придется браться, а то я уже про сайт хотел вспоминать.

ЗАДАЧА
Сделать метку времени у каждого предложения.
Каждому слову в локальном графе присваиватся время предложения в секундах.
Добрные части секунды делятся на количество слов через пробел.
Пишется влокальный граф в абсолютных еденицах.
Заносим определние четверки.
Переводим в глобальный граф с относительными метками времени.
Главное, чтобы все времна четырех единиц не были одинаковыми.
Тоже можно отразить в определении.


Так же остается не проработнным вопрос еденицы, как меры измерения.
Сначала появляется желание измерять, а потом цифры.

Заглянул на страничку википедии с метрологией
Из интересного
Одна из аксиом
Любое измерение есть сравнение.

Единица измерения - положительное сравнение с историческим эталоном.

Сравнение - операция разницы даннх с датчика и данных с памяти исторического эталона.

Разница - железная программа.
Для меня это вычитание графов.

секунда - единица времени

единица - 1

1 - результат с железного сравнения.

Завтра попробовать построить граф как должно быть со всеми этими мыслями в драв ио.

если я введу метки времени, как объяснять одновременные событиями
метку времени в отдельную ноду выносить
получится время со временем ввода

-----

Начал рисовать
последовательность единиц для цифр напоминает числовую прямую

Для простоты работы предлягаю времена считать от начала запуска программы
(в локальном графе)

Нарисовал схемку, как я представляю цирф.
Не у всех нод есть отметка времени.
Думаю, когда начну делать метки времени на общую картину это не повлияет.

Подумал, что синонимы еще придется делать.
Можно сделать словарь с переводом цифр в цифры прописью пока.
Вспомнил, что может быть несколько определений.
Для выбора определения нужен контекст.
Начну все эти зависимости в схему добавлять.

ЗАДАЧА
Вспомнить все диалоги
Пересмотреть все старые диалоги на предмет добавления времени к каждому слову
+ способ организации связи в каждом слове посмотреть

-------------------------

Противоречие
Сейчас при употреблении одного и того же слова дважды, - 
втророй раз для слова не создается файл, а только прокидывается связь, если она нужна.
Это делается для того, чтобы показать, что используется один и тот же класс.

Я хотел показать несколько экземпляров одного класса.
В частности класса единица на числовой прямой.
Экземпляры я думал помечать экземляры временной меткой их употребления (относительной или абсолютной)

Вопрос в том как хранить классы и экземпляры.
Сейчас все на файлах сделано.

ЗАДАЧА
предварительно
храним экземпляры в виде списка времен упоминаний в файле класса слова
а как же связи между экземплярами?
неужели другие кружочки?

Еще раз пытаюст вспомнить процесс измерения
В Живом организме есть показания с датчика
они в попугаях
или через генетическую информацию или через корректировку, вырабатываются эталонные единицы
опять же в попугаях
с которыми сравниваются показания
ответ на логику поступает в попугаях со знаком (+43 попугая или -32 попугая)
дальше механизм регуляции

В данном случае мы по аналогии с генами заводим еденицы измерения в попугаях 
и операцию сравнения
Все это программируется железно
Допускается, что сам агент должен смочь переопределить эти механизы, эталоны
но позже. Над реализацией пока я не думал, но уверен - придумаем.

Рассмотрим две предметные области
Время и числовую прямую.
Время это физическая величина, основанная на датчике.
Датчик возвращает показания в типе данных int или float
у нас есть ключевое слово "разница" для дальнейшей логики

Так же у нас есть цифры
это уже высокоуровневые знаки
с помощью цифр мы пытаемся показания с датчика времени
мне кажется пока надо забить на все это
вернемся, когда будет самоанализ.
Не получится что мы прийдем к жесткому типизированию?

из цифр обозначающих время не получится вычесть обозначающие метры
Человек так то может видеть в том что пришло от датчика только цифры и игнорировать время и метры
Значит цифры отдельно физ величины отдельно

Вернемся к нашим баранам
как объяснять времена и цифры

На уровне средней школы, цифры объясняются с помощью числовой прямой
На уровне наальных классов на счетных палочках
Получается нас пока интерисуют только палочки

Датчик времени должен образовывать кусок графа в локальном
из узлов цифра с датчика, указание названия датчика, объединение этих двух под меткой номер ...

Может сначала обучить цифрам, а потом показаниям с датчика


Пример диалога
Переднами пять палочек
к
о
ж
з
г

обозначим каждую за единицу

это самое сложное
хожу вокруг да около
мне нужно признать, что нужны экземпляры класса
цифра два - шаблон со связью на экземпляр класса и на экземляр такого же класса
Раз есть классы, значит есть иерархия
Множество два, три, четрыре образуют класс цифры
Обратное наследование
когда генерируем родителя из множества детей

получается в овалах создаются не знаки - классы, а экземпляры
как только появляется новое слов - для него создается файл определения, но это определение класса


ЗАДАЧА
создать отедльную ветку
добваление в файл ноды списка времени упоминания абсолютного
именить функцию отрисовки
повторить диалог секунда только с цифрами
Вывод определения, десятки, синонимы, алгоритмы


