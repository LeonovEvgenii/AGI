    Мысли в слух, потом подудаляю или распихаю по разделам
    Опять я программирую слово "=" на питоне. Запись производится в файл.
    Я искал универсальное хранилще для знака и понтяия и решил, что это будет файл.
    В файл можно записать любые аспекты.
    Идеальная ситуация, когда выделяются новые понятия.
    Эта ситуация возможна тогда, когда идет текст. Формируется граф.
    Появляются новые слова, они добавляются в граф. Дальше необходимо понять
    закономерность, какую они обозначают. Генерируется набор функций из известных
    элементов и выбирается наилучшая гипотеза.
    Еще вариант создания нового понятия - обозначение повторяющиеся последовательности слов
    от предложения к предложению.

    Каждый раз когда мы добавляем глагол - у него пишется алгоритм.
    А когда добавляем существительное - разве нет?
    Слово может все что угодно содержать, есть понятия, которые сложные вещи
    описывают и поэтому отсутсвие алгоритма не обязательное свойство существительного.

    Ничего страшного нет, что ты пишешь питоновский код в слово "=". Когда будешь
    решать задачки по программированию по сложнее, там будут определения второго рода.

    Еще примеры
    поиск макисмума сначала из 3 чисел
    потом из 5 (уже сортировка массива будет, потом выдача первого)
    потом максимальное четное (сначала сортировка, потом четное)

    Работа с бесконечностями
    точка закрашенная область, меньше которой закрасить нельзя
    подводка к определению бесконесно малый и бесконечно большой
    (точка и отрезок)

    Продолжаю рассуждать про переменные.
    Один из вариантов - перейти сразу к объяснению одномерного пространства.
    Подразумевалось, что ЯП будет объяснен на ЕЯ.
    Если объяснять сохранение многих значений во многих переменных, то все они будут
    иметь связи со словом "хранит".

    Если рассматривать перезапись одной и той же переменной (a = 1 a = 2 a = 3), то на текущий момент
    в графе показывается, a имеет связь со всеми тремя значениями и не отображает последнее хранящееся значение.
    Это из-за того, что не учитывается порядок ввода. Придется для каждого узла метку времени ыыодить.
    Не используемые значения выкидывать. В результате я играю в компилятор.

    Если использовать уже существующий шаблон, то нужно чтоб слово "=" протягивало связь от переменной к значению.

    В таком случае нужно перед каждой строкой говорить, что это переменная и в нее идет запись значения.
    Или еще лучше, что сейчас мы будм программировать.

    Получается из за контекста используются другие значения.

    Получается это вникание в синтаксис ЯП, а не алгоритмы.
    Чтобы объяснять алгоритмы на ЕЯ, нужны местоимения, лица и обозначение объектов над которыми
    можно производить операции.

    Резюмируем
    Для ЯП нужен контекст.
    А алгоритмы попробуем реализовать на словах, а не на операторах питона.

    Может Маша и яблоки?

    маша хранит одно яблоко
    даша хранит два яблоко
    сколько яблоко всего

    Вообще не очевидно что такое "один", "два", "всего".

    Может симулятор подключить и объекты расставлять.
    Маша один кубик, Даше еще один.
    Яблоки шарики. Можно про воксели вспомнить и про классификацию.
    Слово "всего" подсчет количества объектов одинакового класса?

    Что если самому попробовать составить граф определений топа 10 популярных слов

    Есть определения, которые отталкиваются от физических величин.
    Есть математические и философские определения. Можно сказать, что информационные.
    Математические наверняка когда-то были связаны с физическими и образовались из них.
    Если я хочу объяснить слово "четыре", значит мне придется в реальности показывать
    разные четверки объектв и говорить, что их что-то объединяет. А именно - количественность.
    Числа - отражения количественности величин.
    Переменные - псевданимы и обозначения величин. Присвоение имени.
    Так же есть классы и экземпляры.
    Экземпляры отличаются друг от друга только назвнием.
    Например - "яблоко" и "другое яблоко"
    Числа это тоже классы.
    У числа 4 могут быть экземпляры. 4 обозначющее яблоки и 4 обозначающее людей.
    4 обозначающий абстрактный шаблон.

    Получается к понятиям нужно добавить экземплярность.
    На все ли понятия накладывается экзмплярность или есть исключения.

    Работа с симулятором.

    Понятие кодируемое буквами это не только возможный питоновский код, но еще и 
    список объектов, веселей в симуляторе.

    Как эе быть с переменными?
    Сначала модель цифр сделать из реальности.
    ЯП по сути это калька с реальности для применения определенных подсчетов.
    Операторы - упращенная версия реальных действий , только с определенными свойствами.

    Может попробовать дать определение каким-нибудь глаголам.

    Резюме
    1) определение глаголов
    2) топ 10 граф
    3) рассужденния об экземплярности каждого понятия (например слово "год")
    4) введение определения одномерного пространства
    5) поиск симулятора

    Определение глагола.
    Например передвигаться - изменять свою координату.
    Это шаблон, который можно сравнить с уже совершенным или планируемым действием.
    (локальным графом). и сказать похож или не очень.

    Контексты и фантазии можно представить как записи локального графа в глобальный
    с пометкой когда он был сделан и при каких обстоятельствах.

    Практически любые определения упираются в подсчет объектов.
    Которые, я хотел бы объяснять в симуляторе.
    Допустим симулятор у меня уже есть. Как бы я это объяснял?

    Рисуем иллюстрацию

    1100100001000101

    сколько единиц?

    есть определение слова единица и это шаблон.
    Чтобы понять вопрос, должно быть жестко закадировано понятие шаблона.

    Зачем обязательно в грфику уходить, представляя одномерный массив 1100100001000101
    или многомерный в симуляторе.

    я так же могу в строку через пробел записать 1 1 0 0 1 0 0 0 0 1 0 0 0 1 0 1
    и спросить сколько единиц?

    Люди в отличие от животных научились мыслить абстрактно, а не только принимать показания с датчиков

    строка - это сырые показания.

    абстрация - это использование одних признаков и неиспользование дргугих.

    В ЯП происходит операция сложения в ячейку памяти и сравнение с шаблоном.

    Для любых других цифр - 2, 3, 4 и т д будут дургие шаблоны.
    Если бы я запустил эту строку на текущей реализации программы, то получил бы граф из двух элементов.
    То есть время создания узла в локальном графе - обязательный компонент.
    Может тогда и тип ввода изменить по словам.
    Предложения это тоже абстракии. Первоочередное - это одиночные знаки.

    Если человеку сказать эту же последовательность, он среди всего многообразия вываленных на него признаков
    подчеркнет именно количественность. Не важно считает он это на слух или пишет на бумаге.

    Свойство за которым я гоняюсь - это генерация шаблонов и их использование в любом типе сигнала.

    На каком языке будет записываться этот шаблон?
    Должен ли он использовать те же кирпичики из которых состоит сам сигнал с датчика.
    В живых орггнизмах язык вернего уровня тоже работает поверх ассемблера на генах.
    Нейросети подбирают функцию любой сложности к сигналу.
    Твой подход чем-то отличается от всех дргих попыток постройки интеллектуальных агентов?
    Все началось с отражения связи между словами в тексте.

    возьмем последовательность

    110001100011000 и т д

    Рассмотрим окно []
    запихаем сначала 1 символ из последовательности, пробежимся окном по последовательности
    вычислим ошибку
    потом двумя [11]
    потом тремя [110]
    [1100]
    до [11000]
    Если увеличить окно, то или ошибка перестанет расти
    или период повторения будет уменьшаться

    как подбирать сложные зависимости, когда следующий элемент вычисляется на основ епредыдущего

    нам ведь не надо предсказывать, хотя выделение шаблона, это по сути предсказания

    Тебе нужно было всего-то отпределение цифры на языке твоей проги.

    по сути даже на этой беспорядочной последвательнсти можно выделить шаблоны

    1 - 1
    11 -2
    111 -3
    и т д

    у знака есть id 
    знак задается через положительно подкрепление
    подкрепление, значт есть целевой критерий
    У живых оргнаизмо целевой критерий покормить или похвалить
    может цифры через покормить создавались

    создать симулятор с бегущей строкой, посмотреть как он выработает шаблоны цифр
    может от цифр будет недалеко и до букв и слов

