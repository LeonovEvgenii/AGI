#########
    Посмотреть можно ли дополнить тз этими свойсвтами
    https://en.wikipedia.org/wiki/Artificial_general_intelligence
    https://ru.wikipedia.org/wiki/Сильный_и_слабый_искусственные_интеллекты


#################
# мелкие косяки #
#################

1. Перечитать разделы ТЗ от среднесрочной перспективы и далее.

2. Добавить и отформатировать старые файлы "мысли" в ТЗ.

3. Зачем я в файле графа в json в ключе links пишу ноды, у которых нет связей?
    Перечитать весь код.
    Отрефакторить.

#############################
# Краткосрочная перспектива #
#############################

-2. Внедрить модуль для drawer
    https://graphviz.readthedocs.io/en/stable/manual.html

-1. папка local может отсутсвовать при первом запуске
    Разобраться зачем нужна папка и автоматически ее создавать или разместить в ней
    пример каких-нибдь файлов.
    прыгуть
    knowledge_base/json_description_words/local

0. Изменить формат связей с жестко последовательного на запрограммированный в кажом слове.
    Связи содаются по мере необходимости каждому члену предложения.

4. Алгоритмы
    Понятия переменной(хранит данные), оператора.
    По сути понятие это и есть переменная. В ней в виде кода могут быть данные,
    только на них флаг не исполнения. Оператор это тоже понятие и в нем обычный код
    питона.
    Как могли бы выглядеть алгоритмы на понятиях второго рода?
    Посчитай разница 4 5
    Это я и так делать умею.
    Попробовать условие написать. Алгоритм поиска максимума из 3 чисел.
    Условие добавит истинность и ложность.
    Сделать понятие хранения данных в переменной (например а = 4)
    значения знака = пока что всего два: из программироваия и из математики
    если бы был контекст между ними можно было бы спокойно переключаться

    Пример

    a = 4
    с = a + b

14. Планирование
    Как вид алгоритмов
    Могут пополняться, детализироваться в процессе реалиазии более общего плана.

15. Целеполагание
    
    При планировании следующего действия, всегда идет сравнение с целью в main (последовательно).
    Написать цель на графе.

    Иллюстрация
    команда: засеки время
    Через несколько секунд
    сколько разница засеки_время текущее время

    Плохая иллюстарция - нет отклонения и подцелей.
    Может каждый вопрос как цель устанавливать.
    Тогда вопросы должны быть сложные, вариативные, неоднозначные.
    Подразумевающие промежуточные вычичления.

    Наличие цели подразумеает степень отклонения от нее или отказ в выполнеии каких то дейстий.
    Чтобы работать с действиями, нужно сначала с алгоритмами разобраться.

    Понятие поиска
    Режим копирования с обратной связью

8. Принятие решения о то, когда выводить новое определение
    из за того что им удобно пользоваться или оно общепринято или
    обобщает закономерность
    Одно из свойств языка - упрощение сложных перечислений (слов)
    критерий сложности
    Второе свойсвто - за одими словаим - разный смысл
    Присовение нового смысла словам, даже если они уже используются
    Самое короткое донесение мысли путем упоминания целого слова, 
    хотя внутри этого слова только часть контента нужна

3. Создать сцену сколько прошло секунд
    Проверить работы ноды, возвращающую метку времени.

7. Вопросы и ответы
    Любое утверждение может быть как вопросом так и ответом.
    Ввести оперделение понятия вопроса и ответа. 
    Парсить по знаку вопроса. 
    Так же парсинг возможен по более сложным признакам, например: риторические 
    вопросы, эмуляция желаний собеседника.
    Зависит ли тема вопросов прямо от темы целей.
    Составление полного списка всех возможных слов, обозначающих форму вопроса и 
    ответа. (Кто, что, где, почему и т д.) Найти список у учебнике русского и 
    других языков.
    Вопрос системы - желание пополнить граф (отсутствие информации в графе на 
    заданные впросы человеком).
    Работа естественно в локальном и глобальном графе.
    Протестировать вариант ответа "я не знаю".
    2 Варианта тестов. Человек спрашивает, машниа отвечет и наоборот.
    Переключение между лицом, кто задает вопросы.
    Провека с темой операции над нодами.
    Выдача ложных ответов.
    сценарии:
    вопрос программы - ответ человека (исполнение кода, чтение) - сохранение в программе
    вопрос человека - ответ программы (исполнение кода, чтение) - сохранение в члеовеке
    утверждение человека - сохранение в программе  (исполнение кода, запись)
    утверждение программы - сохранение в человеке (исполнение кода, запись)
    Вопросы подразумевают форирование картины в голове у собеседника и его цели.

8. Иллюстрация для вывода новых данных
    сначала даем определения до года
    потом спрашиваем сколько дней в году
    Сейчас нет понимания, что одно является частью целого, поэтому нельзя
    ответить на данный вопрос.
    Задача непосредственного менеджера. В постановке задачи менеджера есть
    явное формирование правила на связь через один, только оно рекурсивно.
    Это тогда иллюстрация по отношению к слову год, что одно является
    частью целого и части нужно умножать.

4. Запись историй
    Создание иллюстарции с отонсительными событиями.
    Например:
    сохрани_определение в_прошлом любое_событие меньше текущее_время

    Определение я создам, для проверки нужен функционал вопросов.
    Напрмер:
    событие_3 в_прошлом ?

    Добавление ключевых слов, например "дальше", "потом".
    Не участие этих слов в общем списке истории.

17. Выделение закономерностей
    По сути это работа с детектированием историй или определений последовательности.
    Выделение закономерностей это операция над несколькими узлами.
    Сам код выделения закономерности тоже храниться в одном из узлов.
    Узлы из которых выделяют закономерности получены не важно как от органов 
    восприятия.
    Эти же узлы могут быть как сигналами в сыром виде, так и словами (другими 
    абстракциями).
    Оригинал: https://www.youtube.com/watch?v=ZtPNSuWwsnA канал GS RUS




5. Добавить создание определения.
    Выделяется определения двух видов
    1) Интенсиональное - состоит из болеее простых терминов.
    2) Экзистенциональное - выделяется на основе закономерности.
    Зкзистенциальное возможно придется делать после добавления алгоритмов.
    https://ru.wikipedia.org/wiki/Определение_(логика)
    https://dic.academic.ru/dic.nsf/enc3p/220910
    Рассмотреть другие физические величины и доступные органы чувств.
    Можно сделать фундоментальные понятия росовскими нодами.
    Попробовать посоздавать определения из топа частотных слов в русском языке.
    Не работаем с толковым словарем для детей. Там много устаревших слов.

9. Синонимы.
    У двух слов одно и то же определение.
    Слова могут печататься с опечатками.

10. Выделение смысла у окончаний, склонений, родов.


11. Контексты


12. Истинность и ложность высказываний, закономерностей, гипотиз.
    Закономерности и гипотезы будут добавлены существенно ниже (позже).
    Истинными помечаются узлы, если они сраваясь с другими участками графа 
    совпадают.
    Желательно делать несколько сравнений, если есть записи в истории о 
    прецендентах.
    Сравнили с определением в теории, сравнили с применениями, описаниями на 
    практике.
    Запись в глобальный граф только истинных высказываний.

6. Операции над вершинами и связями (CRUD).
    Проверить и продемонстрировать все операции над вершинами(понятиями) и 
    отдельно над связями.
    Чтение, изменение, удаление, создание.
    Чтение это выведи_определение и на_что_похоже
    Изменение легко добавляется конструкцией измени_определние секунда другая разница время
    Автоматичесок изменение будет после истинности и ложности
    Удаление отдельного слова есть.
    Создание в локальном и при промежуточных резульаттах есть автоматическое.
    В глобальном перенос по ключевому слову.
    Создание своего бесконечного цикла, не прерываемого человеком.
    Или вставка задач в стек задачь.

13. Выделение локальной и глобальной памяти.
    Высказывания попадают в глобальную память, когда меняется контекст или они 
    считаются истиными.
    Куски графа из глобальной памяти могут применятся к разным контекстам в 
    локальной.
    Флаг истинности или ложности оставить как в глобальной памяти, так в 
    локальной.
    Добавление временной метки к элементам и связям в любой памяти.
    Как могут выглядеть разные виды контекста (удаленность от текущей временной 
    ветки) - отдельная задача.
    Хранить источник данных (из знака или внешней среды). Способ вывода из 
    старых знаний.
    Удаление вершин при добалении истинности или ложности и при переводе в 
    глобальный.



16. Генерация новых знаний.
    Должна включаться каждый раз, когда нет ответа в памяти. 
    По сути мы ее ограничиваем в выводе.
    Отработать на задаче непосредственного менеджера. Пример с генерацией новых 
    знаний. 
    Напрямую связи между элементами не определены, но можно спросить систему 
    через элемент.
    Один из вариантов, что знания заключаются в новых связях. 
    Так же можно выделить новые знания в новых элементах. 
    Например выполнилась мини программа внутри одного узла, и т к ответ 
    представляет из 
    себя ни разу не использованное слово, то сделать под него новый узел и выдать 
    его за ответ. 
    С цифрами сложнее. Под каждую новую цифру создавать новый узел в локальной 
    памяти. 
    Все они попадают под определение цифры. Можно создать локальный узел, для 
    ответа, т к в оперативке он новый. 
    Потом забыть или запонмить факт возможного решения.
    Проверить генерацию новых знаний на сказке о колобке. 
    От кого еще может уйти колобок, помимо перечисленных вариантов. (ответ от 
    кого угодно). 
    А если в рот попросят прыгуть? (ответ - ни от кого не уйдет, кроме того, 
    кто попросил в рот прыгнуть).
    Можно воспринять как факты, для выработки знаний. (колобок от бабушки ушел, 
    колобок 
    от дедушки ушел, колобо от зайца ушел, колобок от лисы не ушел). 
    Если выделяестся закономерность (колобок от всех уходит), то она должна 
    как-то записываться (в виде правила)?
    Так же еще есть язык даталог. 
    Есть ли необходимость заключения его внутри узла? Пока не вижу. 
    Он хороший пример ограничеий (правил), которым нужно соответсвовать, чтоб 
    сделать вывод, дать ответ. 
    Правила могут быть записаны на графе или в вершинах?
    Отдельная задача, но в данной группе - выделение правила из закономерности и 
    запись на графе. 
    Можно сначала без графа. Умение обобщать. Дедукция и индукция. + еще несколько по методичке викентьевой. 
    Почитать статью на википедии о наукометрии.
    Фишка знаний в том, чтобы генерировать новые знания по имеющимся правилам.
    Бесполезно переписывать все возможные комбинации входов и выходов.
    Колобок ушел от бабушки? Колобок - сущность, вершина. Бабушка - сщность 
    вершина. Ушел - оператор? 
    можем ли мы ноые занияния сгенерировать? Или это только повествование. 
    Пересказ это оператор? (нет. Новых заний нет, если новые зания есть, это уже 
    не пересказ). 
    Если появляются новая информация - значит оператор. Если не появляется - 
    пересказ, повествование. 
    Занния можно генерировать не только на цифрах, но и судить от кого еще уйдет 
    колобок.



18. Изменить способ отрисовки в графе.
    Хотелось бы, ноды, которые являются питоновскими программами отображать 
    прямоугольником.
    Все оставшееся касается только graphviz.
    https://graphviz.org/doc/info/shapes.html
    https://stackoverflow.com/questions/2012036/graphviz-how-to-connect-subgraphs
    Сайтик?

19. Проблема относительного импорта в subprocess
    Создать установщик, который бы прописывал необходимые абсолютные импорты.
    Или
    Решения:
    https://stackoverflow.com/questions/16981921/relative-imports-in-python-3
    Попробовать оформить проект как package или с __init__.py
    Есть описание в слове сохрани_определение save_defenition.py

20. Режимы рисования (вкл/откл)
    - служебные слова
    - классы

21. general-purpose robot
    обработать формулировку
    включить в описание редми, короткой и длинной документации
    создать еще один репозиторий
    протестировать субмодули

22. Перенести из обсидиана в гит список компаний
    Оформить в формате md.
    Обсидиан использовать как редактор.

